name: Test Manage Pull Requests and Issues Action
run-name: ${{github.actor}} PR opend or edited for ${{github.repository}}. Executing custom action `manage-pullrequest-issue` for ${{github.actor}}.

on:
  workflow_dispatch: # Allows the workflow to be triggered manually

  # Options to test the action with different events
  #pull_request:
  #  types:
  #    - opened
  #    - edited
  #issues:
  #  types:
  #    - opened
  #    - edited

jobs:
  test-manage-pullrequest-issue-action:
    name: TEST - Manage Pull Requests and Issues Action
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout Repository - ${{github.repository}}
        id: checkout-repository
        uses: actions/checkout@v3

      - name: 2. Set up Node.js 18 for Action to Run
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: 3. Install Dependencies for Manage-PullRequest-Issue Action
        id: install-dependencies
        run: |
          cd .github/actions/manage-pullrequest-issue
          npm install
        continue-on-error: false

      - name: 4. Build Action and Transpile TypeScript to JavaScript
        id: build-action
        run: |
          cd .github/actions/manage-pullrequest-issue
          npm run build
        continue-on-error: false

      - name: 5. Run Action passing in Args from YML Configuration
        id: run-action
        uses: ./.github/actions/manage-pullrequest-issue
        with:
          actor: "all" # "dependabot[bot]" or "all" or "specific-actor"
          branches: "main,develop" # "main,develop" or "all"
          event_types: "pull_request,issues" # Event types to manage
          title_prefix: "test-prefix: " # Prefix to add to the title
          labels: "manage-pr-issue" # Labels to add to the PR or Issue
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }} # Personal Access Token to allow the action to interact with the repository and install from package. (Prevents me needing to insatll it in the action)
