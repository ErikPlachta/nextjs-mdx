name: Issue Opened

on:
  issues:
    types: [opened]

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  OUTPUT_PATH: "./_log/update-new-issue-title-and-labels"
  OUTPUT_LOG_FORMAT: "MD"
  OUTPUT_CRUD_OPTIONS: "append"

jobs:
  issue-update:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Update Issue Title and Labels
        uses: ./.github/actions/issue-update
        with:
          issue-number: ${{ github.event.issue.number }}
          github-token: ${{ env.GITHUB_TOKEN }}
          config: >
            {
              "updateTitle": true,
              "titleConventionalCommit": true,
              "typeInBody": true,
              "scopeInBody": true,
              "titleAsDescription": true,
              "tagsInBody": true,
              "minutesStillConsideredNew": 5
            }

# name: Issue Opened

# on:
#   issues:
#     types: [opened]

# env:
#   MINUTES_STILL_CONSIDERED_NEW: 5
#   GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
#   OUTPUT_PATH: "./_log/update-new-issue-title-and-labels"
#   OUTPUT_LOG_FORMAT: "MD"
#   OUTPUT_CRUD_OPTIONS: "append"

# jobs:
#   issue-update:
#     runs-on: ubuntu-latest
#     permissions:
#       issues: write
#       contents: write
#     steps:
#       - name: Checkout Code
#         id: checkout
#         uses: actions/checkout@v4
#       - name: Update Issue Title and Labels
#         id: update_issue # ID used to reference outputs of this step
#         uses: ./.github/actions/issue-update
#         with:
#           # Target Issue
#           issue-number: ${{ github.event.issue.number }}
#           # User Auth
#           github-token: ${{ env.GITHUB_TOKEN }}
#           # Conventional Commit Options
#           title-conventional-commit: true
#           type-in-body: true
#           scope-in-body: true
#           tags-in-body: true
#           title-as-description: true
#           # Issue Still New Options
#           minutes-still-considered-new: ${{ env.MINUTES_STILL_CONSIDERED_NEW }}

#   # TODO: Onboard this action once I'm ready.
#   # log-action-results:
#   #   needs: issue-update
#   #   runs-on: ubuntu-latest # Added runs-on
#   #   permissions:
#   #     pull-requests: write
#   #     contents: write
#   #   steps: # Added steps structure
#   #     - name: Log Action Results
#   #       uses: ./.github/actions/log
#   #       with:
#   #         data: ${{ toJson(needs.issue-update.outputs.update-output) }} # Assuming update_issue step correctly sets an output
#   #         localOutputPath: ${{ env.OUTPUT_PATH }}
#   #         crudOptions: ${{ env.OUTPUT_CRUD_OPTIONS }}
#   #         logFormat: ${{ env.OUTPUT_LOG_FORMAT }}
